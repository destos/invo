name: myinvo
services:
- name: server
  github:
    repo: destos/invo
    branch: do
    deploy_on_push: true
  run_command: gunicorn --worker-tmp-dir /dev/shm invo.wsgi
  envs:
  - key: DISABLE_COLLECTSTATIC
    value: "1"
    scope: BUILD_TIME
  - key: DATABASE_URL
    value: "${db.DATABASE_URL}"
    scope: RUN_TIME
  - key: DJANGO_ALLOWED_HOSTS
    value: "${APP_DOMAIN},*.${APP_DOMAIN}"
    scope: RUN_TIME
  routes:
  - path: /admin
  - path: /graphql
jobs:
- name: migrate
  kind: PRE_DEPLOY
  github:
    repo: destos/invo
    branch: do
    deploy_on_push: true
  run_command: python manage.py migrate
  envs:
  - key: DISABLE_COLLECTSTATIC
    value: "1"
    scope: BUILD_TIME
  - key: DATABASE_URL
    value: "${db.DATABASE_URL}"
    scope: RUN_TIME
static_sites:
- name: invo-frontend
  source_dir: pwa
  build_command: npm run build
  environment_slug: node-js
  index_document: index.html
  catchall_document: index.html
  github:
    branch: do
    deploy_on_push: true
    repo: destos/invo
  envs:
  - key: REACT_APP_DOMAIN
    value: "${APP_DOMAIN}"
    scope: BUILD_TIME
  # routes:
  #   - path: /*
- name: static
  github:
    repo: destos/invo
    branch: do
    deploy_on_push: true
  # This happens as part of the Python/DJango buildpack:
  # build_command: python manage.py collectstatic --noinput
  output_dir: staticfiles
  routes:
  - path: /static
databases:
# Create a new dev DB:
- name: db
  engine: PG
  version: "12"
