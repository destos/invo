[tool.poetry]
authors = ["Patrick Forringer <patrick@forringer.com>"]
description = "Inventory management system"
license = "MIT"
name = "invo"
version = "0.1.0"

[tool.poetry.dependencies]
ariadne-extended = "0.2.4"
arrow = "^0.15.6"
channels = "^3.0.3"
channels-redis = "^3.2.0"
daphne = "^3.0.1"
dateutils = "^0.6.11"
django = "~3.1.6"
django-configurations = {version = "^2.2", extras = ["cache", "database", "email", "search"]}
django-cors-headers = "^3.5.0"
django-extensions = "^3.0.9"
django-filter = "^2.4.0"
django-fsm = "^2.7.0"
django-haystack = "^3.0.0"
# TODO: fix extended and django-measurement packages.
django-measurement = {git = "https://github.com/coddingtonbear/django-measurement.git", rev = "v4"}
django-memoize = "^2.3.1"
django-model-utils = "^4.1.1"
django-mptt = "^0.11.0"
django-mptt-admin = "^2.0.0"
django-pghistory = "^1.2.0"
django-polymorphic = "^3.0.0"
django-polymorphic-tree = "^1.5.1"
django-q = {path = "../python/django-q"}
django-redis = "^4.12.1"
django-safedelete = "^0.5.6"
django-waffle = "^2.0.0"
djangorestframework-simplejwt = "^4.6.0"
elasticsearch = "^5.0.0"
glom = "^20.11.0"
marshmallow = "^3.9.1"
psutil = "^5.8.0"
psycopg2-binary = "^2.8.6"
pyhumps = "^1.6.1"
PyJWT = "^2.0.0"
python = "^3.9"
rich = "^10.2.2"
segno = "^1.3.1"
sentry-sdk = "~0"
supervisor = "^4.2.1"
Twisted = {version = "^20.3.0", extras = ["tls", "http2"]}
uvicorn = {version = "^0.13.3", extras = ["standard"]}
whitenoise = "^5.2.0"

[tool.poetry.dev-dependencies]
black = {version = "^20.8b1", allow-prereleases = true}
ipdb = "^0.13.4"
model_bakery = "^1.2.0"
pytest-django = "^3.10.0"
pytest-mock = "^3.3.1"
pytest-watch = "^4.2.0"
mock = "^4.0.2"
pylint = "^2.6.0"
pytest = "^6.1.2"
flake8 = "^3.8.4"
flakehell = "^0.7.1"
rope = "^0.18.0"
isort = "^5.7.0"
coverage = "^5.3.1"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "invo.config"
DJANGO_CONFIGURATION = "Test"
addopts = "--no-migrations --disable-pytest-warnings -vvv"
python_files = "tests.py test_*.py *_tests.py"

[tool.black]
exclude = '/(\.eggs|\.git|\.mypy_cache|\.pytest_cache|\.tox|venv|\.venv|build|dist|migrations|htmlcov)/'
include = '\.pyi?$'
line-length = 99
target-version = ['py38']

[tool.flake8]
format = "colored"
max_line_length = 99

[tool.isort]
# https://github.com/timothycrosley/isort
# https://github.com/timothycrosley/isort/wiki/isort-Settings
line_length = 99
indent = "    "
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
skip_glob = "*/migrations/*"
known_local_folder = ["invo/apps/"]

# [tool.flakehell.plugins]
# flake8-isort = ["+*"]

# [tool.coverage]
# # https://github.com/nedbat/coveragepy
# [tool.coverage.run]

# source = ["app"]
# branch = true
# omit = ['']

# [tool.coverage.report]
# exclude_lines = [
#     "# noqa",
#     "raise NotImplementedError"
# ]

[build-system]
build-backend = "poetry.masonry.api"
requires = ["poetry>=0.12"]

[tool.pyright]
include = ["invo"]
# exclude = ["**/node_modules", "**/__pycache__", # "src/experimental", # "src/typestubs" ]
exclude = ["**/node_modules", "**/__pycache__" ]
# ignore = ["src/oldstuff"]
# stubPath = "src/stubs"
venv = "invo-J7DWE4E6-py3.9"

# reportMissingImports = true
# reportMissingTypeStubs = false

pythonVersion = "3.7"
pythonPlatform = "Linux"

executionEnvironments = [ { root = "invo" } ]
  # { root = "src/web", pythonVersion = "3.5", pythonPlatform = "Windows", extraPaths = [ "src/service_libs" ] },
  # { root = "src/sdk", pythonVersion = "3.0", extraPaths = [ "src/backend" ] },
  # { root = "src/tests", extraPaths = ["src/tests/e2e", "src/sdk" ]},
